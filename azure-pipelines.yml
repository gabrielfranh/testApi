trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  IMAGE_NAME: 'gabrielfranh/testapi'       # Seu repositório Docker Hub
  IMAGE_TAG: '$(Build.BuildId)'            # Usar o ID da build como tag

steps:
# Build and Push Docker Image
- task: Docker@2
  inputs:
    containerRegistry: 'DockerHubConnection'  # Nome da conexão de serviço no Azure DevOps
    repository: '$(IMAGE_NAME)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'                # Caminho para seu Dockerfile
    tags: '$(IMAGE_TAG)'

# Install AWS CLI
- script: |
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install
  displayName: 'Install AWS CLI'

# Configure AWS CLI
- script: |
    aws configure set aws_access_key_id $(awsAccessKeyId)
    aws configure set aws_secret_access_key $(awsSecretAccessKey)
    aws configure set region us-east-1
  displayName: 'Configure AWS CLI'
  env:
    AWS_ACCESS_KEY_ID: $(awsAccessKeyId)
    AWS_SECRET_ACCESS_KEY: $(awsSecretAccessKey)

# Download the Kubeconfig
- task: DownloadSecureFile@1
  name: downloadKubeConfig
  inputs:
    secureFile: 'kubeconfig-eks'

# Apply the Kubernetes Deployment
- script: |
    export KUBECONFIG=$(downloadKubeConfig.secureFilePath)
    kubectl set image deployment/minha-api minha-api=$(IMAGE_NAME):$(IMAGE_TAG)
  displayName: 'Update deployment to new image'
