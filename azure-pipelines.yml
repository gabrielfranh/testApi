trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  IMAGE_NAME: 'gabrielfranh/testapi'
  IMAGE_TAG: '$(Build.BuildId)'

steps:
# Build and Push Docker Image
- task: Docker@2
  inputs:
    containerRegistry: 'DockerHubConnection'
    repository: '$(IMAGE_NAME)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(IMAGE_TAG)'

# Install envsubst
- script: |
    sudo apt-get update
    sudo apt-get install -y gettext
  displayName: 'Install envsubst'

# Configure AWS CLI
- script: |
    aws configure set aws_access_key_id $(awsAccessKeyId)
    aws configure set aws_secret_access_key $(awsSecretAccessKey)
    aws configure set region us-east-1
  displayName: 'Configure AWS CLI'
  env:
    AWS_ACCESS_KEY_ID: $(awsAccessKeyId)
    AWS_SECRET_ACCESS_KEY: $(awsSecretAccessKey)

# Download the Kubeconfig
- task: DownloadSecureFile@1
  name: downloadKubeConfig
  inputs:
    secureFile: 'kubeconfig-eks'

# Delete Existing Deployment and Service
- script: |
    export AWS_ACCESS_KEY_ID=$(awsAccessKeyId)
    export AWS_SECRET_ACCESS_KEY=$(awsSecretAccessKey)
    export AWS_DEFAULT_REGION=us-east-1
    export KUBECONFIG=$(downloadKubeConfig.secureFilePath)

    kubectl delete deployment testapi-dp --ignore-not-found
    kubectl delete svc testapi-svc --ignore-not-found
  displayName: 'Delete Existing Kubernetes Deployment and Service'

# Apply Kubernetes Service and Create Deployment with Variable Substitution
- script: |
    export AWS_ACCESS_KEY_ID=$(awsAccessKeyId)
    export AWS_SECRET_ACCESS_KEY=$(awsSecretAccessKey)
    export AWS_DEFAULT_REGION=us-east-1
    export KUBECONFIG=$(downloadKubeConfig.secureFilePath)

    export IMAGE_NAME=$(IMAGE_NAME)
    export IMAGE_TAG=$(IMAGE_TAG)

    echo "Substituindo variáveis no deployment.yaml"
    cat $(System.DefaultWorkingDirectory)/testapi-dp.yaml

    envsubst < $(System.DefaultWorkingDirectory)/testapi-dp.yaml > $(System.DefaultWorkingDirectory)/deployment-subst.yaml

    echo "Conteúdo de deployment-subst.yaml"
    cat $(System.DefaultWorkingDirectory)/deployment-subst.yaml

    kubectl apply -f $(System.DefaultWorkingDirectory)/testapi-svc.yaml
    kubectl apply -f $(System.DefaultWorkingDirectory)/deployment-subst.yaml
  displayName: 'Apply Kubernetes Service and Create Deployment'
  
  # Autenticar no Docker Hub
- script: |
    echo $(dockerHubPassword) | docker login -u $(dockerHubUsername) --password-stdin
  displayName: 'Login no Docker Hub'

# Remover Imagens Antigas do Docker Hub
- script: |
    images=$(curl -s -u $(dockerHubUsername):$(dockerHubPassword) https://hub.docker.com/v2/repositories/gabrielfranh/testapi/tags/?page_size=100 | jq -r '.results|sort_by(.last_updated)|reverse|.[2:]|.[]|.name')
    for image in $images; do
      echo "Deleting image: gabrielfranh/testapi:$image"
      curl -s -u $(dockerHubUsername):$(dockerHubPassword) -X DELETE https://hub.docker.com/v2/repositories/gabrielfranh/testapi/tags/$image/
    done
  displayName: 'Remover Imagens Antigas'
